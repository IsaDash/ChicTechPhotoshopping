A1:

1. How many bits does it take to represent the values from 0 to 255?

8 bits.

2. How many bytes does it take to represent a color in the RGB color model?

3 bytes.

3. How many pixels are in a picture that is 640 pixels wide and 480 pixels high?

307,200 pixels

-----------------------------------------------------------------

A2:

1. How can you make pink?

r=255, g=117, b=255

2. How can you make yellow?

r=255, g=255, b=0

3. How can you make purple?

r=255, g=0, b=255

4. How can you make white?

r=255, g=255, b=255

5. How can you make dark gray?

r=70, g=70, b=70

-----------------------------------------------------------------

A3: 

1. What is the row index for the top left corner of the picture?

0

2. What is the column index for the top left corner of the picture?

0

3. The width of this picture is 640. What is the right most column index?

639

4. The height of this picture is 480. What is the bottom most row index?

479

5. Does the row index increase from left to right or top to bottom?

Top to bottom.

6. Does the column index increase from left to right or top to bottom?

Left to right.

7. Set the zoom to 500%. Can you see squares of color? This is called pixelation. Pixelation means
displaying a picture so magnified that the individual pixels look like small squares. 

-----------------------------------------------------------------

A5:

1. Open Picture.java and look for the method getPixels2D. Is it there?

No.

2. Open SimplePicture.java and look for the method getPixels2D. Is it there?

Yes.

3. Does the following code compile?
 DigitalPicture p = new DigitalPicture();

No.

4. Assuming that a no-argument constructor exists for SimplePicture, would the following
code compile?
 DigitalPicture p = new SimplePicture();

Yes.

5. Assuming that a no-argument constructor exists for Picture, does the following code
compile?
 DigitalPicture p = new Picture();

Yes.

6. Assuming that a no-argument constructor exists for Picture, does the following code
compile?
 SimplePicture p = new Picture();

Yes.

7. Assuming that a no-argument constructor exists for SimplePicture, does the following
code compile?
 Picture p = new SimplePicture();

No.

-----------------------------------------------------------------

A7:

1. How many times would the body of this nested for loop execute?
 for (int row = 7; row < 17; row++)
   for (int col = 6; col < 15; col++)

90

2. How many times would the body of this nested for loop execute?
 for (int row = 5; row <= 11; row++)
   for (int col = 3; col <= 18; col++)

112
 
-----------------------------------------------------------------

A9:

2. Work in groups to come up with another algorithm for edge detection.

Instead of just looking at the pixel immediately to the side or up/down,
you could look at squares of 3x3 pixels -- that is, for each pixel, look
at the 8 pixels all around it to decide whether that pixel is an edge. Then
instead of looking at the color distance from the center pixel to each
of the surrounding pixels, you might look for different patterns, like if
all of the pixels on one side are a different color than the pixels on the
other side.  

You could also assume that edges tend to be more than one pixel in size,
so you are more likely to be an edge if one of the pixels near you
was an edge.


 
